@attribute [Authorize]
@inject IBasketService basketService
@inject EventService eventService
@implements IDisposable

<a class="esh-basketstatus @(badge < 1 ? "is-disabled" : "")"
   href="/basket">
    <div class="esh-basketstatus-image">
        <img src="assets/images/cart.png" />
    </div>
    <div class="esh-basketstatus-badge">
        @badge
    </div>
</a>

@code {
    private int badge;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var userId = (await authenticationStateTask).User.GetSub();
        await UpdateBadge(userId);
        eventService.BasketItemAdded += UpdateBadge;
    }

    private async Task UpdateBadge(string userId)
    {
        var basket = await basketService.GetBasket(userId);
        badge = basket.Items.Count;
        StateHasChanged();
    }

    public void Dispose()
    {
        eventService.BasketItemAdded -= UpdateBadge;
    }
}
